name: "Python Builder"
run-name: Running build by ${{ github.actor }}
on:
  push:
    branches:
      - main
    tags:
      - v*

env:
  dist_file: dist/igen

jobs:
  build-linux-executable:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        python-version: ["3.11"]
        include:
          - os: macos-latest
            TARGET: macos
            CMD_BUILD: >
                pyinstaller igen.spec &&
                cd dist/ &&
                zip -r9 igen igen.app/                
            OUT_FILE_NAME: igen.zip
            ASSET_MIME: application/zip
          - os: windows-latest
            TARGET: windows
            CMD_BUILD: pyinstaller igen.spec
            OUT_FILE_NAME: igen.exe
            ASSET_MIME: application/vnd.microsoft.portable-executable
          - os: ubuntu-latest
            TARGET: ubuntu
            CMD_BUILD: pyinstaller igen.spec
            OUT_FILE_NAME: igen
            ASSET_MIME: application/x-executable
            
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setting up python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          pip install -r requirements-dev.txt

      - name: Build package with pyinstaller on ${{ matrix.TARGET }}
        run: pyinstaller igen.spec

      - name: Upload package
        uses: actions/upload-artifact@v4
        if: startsWith(github.ref, 'refs/heads/main')
        with:
          name: ${{ matrix.OUT_FILE_NAME }}
          path: ./dist/${{ matrix.OUT_FILE_NAME }}

      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          asset_path: ./dist/${{ matrix.OUT_FILE_NAME}}
          asset_name: ${{ matrix.OUT_FILE_NAME}}
          asset_content_type: ${{ matrix.ASSET_MIME}}
